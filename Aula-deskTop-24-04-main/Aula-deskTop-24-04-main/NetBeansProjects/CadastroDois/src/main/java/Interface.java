
import com.mycompany.cadastrodois.controle.PessoaControle;
import com.mycompany.cadastrodois.modelo.Pessoa;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultTreeModel;


public class Interface extends javax.swing.JFrame {
    private PessoaControle controle = new PessoaControle();
    private DefaultTableModel tabeModelo;
    private int idSelecionado = -1;
    private boolean modoAtualizacao = false;
    
    private void atualizarTabela(){
        tabeModelo.setRowCount(0); // Limpa os dados da tabela.
        
        ArrayList<Pessoa> lista = controle.listar(); //Busca do banco
        for (Pessoa pessoa : lista) {
            tabeModelo.addRow(new Object[]{p.getNome(), p.getId(), p.getIdade()});
            
        }
    
    }
    
    private void buscarDinamicamente(){
        String nomeBuscado = txtBusca.getText().trim();
        
        tabeModelo.setRowCount(0); // Limpa a tabela
        ArrayList<Pessoa> lista = controle.buscarPorNome(nomeBuscado);
        
        for (Pessoa pessoa : lista) {
            tabeModelo.addRow(new Object[]{p.getId(), p.getNome(), p.getIdade()});
            
        }
    
    }
    
    private void btnEntarActionPerformed(java.awt.event.ActionEvent evt){
        String nome = txtNome.getText().trim();
        int idade;
        
        try {
            idade = Integer.parseInt(txtIdade.getText().trim());
            
            if (!nome.isEmpty()) {
                if (!modoAtualizacao) {
                    controle.cadastrar(nome, idade);
                    JOptionPane.showMessageDialog(this, "Cadastro realizado com suceso!");
                    
                }else{
                    controle.atualizar(idSelecionado, nome, idade);
                    JOptionPane.showMessageDialog(this, "Atualização realizada com sucesso!");
                    btnEntrar.setText("Cadastrar");
                    idSelecionado = -1;
                    modoAtualizacao = false;
                }
                
            atualizarTabela();
            txtNome.setText("");
            txtIdade.setText("");
                
            }else{
                JOptionPane.showMessageDialog(this, "Preencha o nome corretamente.");
            }
            
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Idade deve ser um número inteiro");
            
        }
    }
    
    

    public Interface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nome:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(274, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(450, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
